#!/usr/bin/groovy

node {
    def root = pwd()
    def mvn = tool 'M3'

    stage("Setup") {
        deleteDir()
        git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}"
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: "${env.ARTIFACT_STORAGE_CREDS}", usernameVariable: "USER", passwordVariable: "PASS"]]) {
            sh 'sed -i "s*CONDA_CHANNEL*`echo $CONDA_CHANNEL | sed -e "s/NEXUSUSER/${USER}/g" | sed -e "s/NEXUSPASS/${PASS}/g"`*g" environment.yml'
        }
    }
    def appvers = sh(script: """git describe --long --tags --always | sed 's/\\./-/'g""", returnStdout: true).trim()
    def appName = "bfalg-shape-${appvers}"

    if(false){
    stage("Archive") {
        def archiveName="bfalg-shape.tgz"
        sh "tar -cvzf ${archiveName} shape/ ci/ manifest.jenkins.yml pzsvc-exec.config environment.yml Procfile"
        sh """
          mvn -X --settings ~/.m2/settings.xml deploy:deploy-file -Dfile=${archiveName} \
    		-DrepositoryId=nexus \
    		-Durl="${env.ARTIFACT_STORAGE_DEPLOY_URL}" \
    		-DgroupId="org.venice.beachfront" \
    		-DgeneratePom=false \
    		-Dpackaging=tgz \
    		-Dmaven.repo.local="${root}/.m2/repository" \
    		-DartifactId=bfalg-shape \
    		-Dversion=${appvers} \
    	  """
        sh "rm ${archiveName}"
    }}
    stage("Conda Build") {
        dir("docker") {
	    sh "mkdir share && cp ../environment.yml share/"
            sh "docker-compose rm -f --all"
            sh "docker-compose up --build --no-color"
	    sh "ls share"
        }
    }
}
